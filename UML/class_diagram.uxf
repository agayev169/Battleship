<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>3</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>474</x>
      <y>93</y>
      <w>168</w>
      <h>174</h>
    </coordinates>
    <panel_attributes>/::Player/
--
-ships = new Ship[5]: Ship[]
-gridMine = new char[10][10]: char[][]
-gridOpponent = new char[10][10]: char[][]
-game: Game
-id: int
+MISS = 0: int
+HIT = 1: int
+SINK = 2: int
--
+Player(Game game, int id): ctor
+getShips(): Ship[]
+getShip(int index): Ship
+getGridMine(): char[][]
+getGridMine(int x, int y): char
+getGridOpponent(): char[][]
+getGridOpponent(int x, int y): char
+getGame(): Game
+getId(): int
+setShips(Ship[] ships): void
+setShip(int index, Ship ship): void
+setGridMine(char[][] gridMine): void
+setGridMine(int x, int y, char val): void
+setGridOpponent(char[][] gridOpponent): void
+setGridOpponent(int x, int y, char val): void
+setGame(Game game): void
+buildShips(): void
+attack(): void
+attemptToBuild(int x, int y, int segmentNum, boolean isHorizontal): boolean
+showGridMine(boolean clear): void
+showGridOpponent(boolean clear): void
+showGrids(boolean clear): void
+getDamage(int x, int y): int
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>222</x>
      <y>189</y>
      <w>138</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>::Ship
--
-x: int
-y: int
-isHorizontal: boolean
-health: boolean[]
--
+Ship(int x, int y, int segmentNum, boolean isHorizontal): ctor
+getX(): int
+getY(): int
+isHorizontal(): boolean
+getHealth(): boolean[]
+setX(int x): void
+setY(int y): void
+setHorizontal(boolean horizontal): void
+setHealth(boolean[] health): void
+getDamage(int x, int y): void
+isDead(): boolean
+isAt(int x, int y): boolean
+toString(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>177</x>
      <y>93</y>
      <w>183</w>
      <h>87</h>
    </coordinates>
    <panel_attributes>::Game
--
-turn = 0: int
-players: Player[]
+MISS = 0: int
+HIT = 1: int
+SINK = 2: int
--
+Game(): ctor
+Game(boolean singlePlayer): ctor
+Game(int userNum): ctor
+getTurn(): int
+canBuild(int x, int y, int segmentNum, boolean isHorizontal, int id): boolean
+attemptToBuild(int x, int y, int segmentNum, boolean isHorizontal, int id): boolean
+shoot(int x, int y, int id): int
+play(): void
+gameOver(): int
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>474</x>
      <y>285</y>
      <w>69</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>::Bot
--
--
+Bot(Game game, int id): ctor
+buildShips(): void
+attack(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>570</x>
      <y>285</y>
      <w>72</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>::User
--
--
+User(Game game, int id): ctor
+buildShips(): void
+attack(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>552</x>
      <y>264</y>
      <w>60</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0;180.0;40.0;180.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>507</x>
      <y>264</y>
      <w>54</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>160.0;10.0;160.0;40.0;10.0;40.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>357</x>
      <y>111</y>
      <w>123</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=2
&lt; plays</panel_attributes>
    <additional_attributes>10.0;20.0;390.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>357</x>
      <y>207</y>
      <w>123</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=-
m1=5
m2=1
&lt; builds/destroys</panel_attributes>
    <additional_attributes>10.0;20.0;390.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>180</x>
      <y>393</y>
      <w>192</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>::GUIListener
--
-WIDTH: int
-HEIGHT: int
-game: Game
-buildIndex = 0: int
-toBuild = { 2, 3, 3, 4, 5 }: int[]
-isHorizontal = true: boolean
-player: Player
-mouseX = 0: int
-mouseY = 0: int
-panel: GridPanel
-active = true: boolean
--
+GUIListener(int width, int height, Game game, Player player, GridPanel panel): ctor
+isHorizontal(): boolean
+getMouseX(): int
+getMouseY(): int
+getShipSize(): int
+isActive(): boolean
+setActive(boolean active): void
+mouseClicked(MouseEvent mouseEvent): void
+mousePressed(MouseEvent mouseEvent): void
+mouseReleased(MouseEvent mouseEvent): void
+mouseEntered(MouseEvent mouseEvent): void
+mouseExited(MouseEvent mouseEvent): void
+mouseDragged(MouseEvent mouseEvent): void
+mouseMoved(MouseEvent mouseEvent): void
+keyTyped(KeyEvent keyEvent): void
+keyPressed(KeyEvent keyEvent): void
+keyReleased(KeyEvent keyEvent): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>414</x>
      <y>333</y>
      <w>228</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>::GridPanel
--
+WIDTH: int
+HEIGHT: int
-player: Player
-game: Game
-timer: Timer
-listener: GUIListener
-isReady = true: boolean
-readyButton: JButton
-cardLayoutPanel: JPanel
--
+GridPanel(int width, int height, Player player, Game game, JPanel cardLayoutPanel): ctor
+isReady(): boolean
+setReady(boolean ready): void
+getCardLayoutPanel(): JPanel
-drawSegment(int x, int y, Color color, boolean left, Graphics g): void
-drawSunkSegment(int x, int y, Color color, boolean left, Graphics g): void
-drawShip(int x, int y, int segmentNum, boolean isHorizontal, Color color, boolean left, Graphics g): void
#paintComponent(Graphics g): void
+actionPerformed(ActionEvent actionEvent): void
+toString(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>180</x>
      <y>333</y>
      <w>135</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>::MainMenuPanel
--
+WIDTH: int
+HEIGHT: int
-buttonSP: JButton
-buttonMP: JButton
--
+MainMenuPanel(int width, int height, MainGUI runner): ctor
#paintComponent(Graphics g): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>189</x>
      <y>177</y>
      <w>33</w>
      <h>162</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=1
&lt; launches</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;520.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>207</x>
      <y>177</y>
      <w>213</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=1..2
&lt; visualizes</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;440.0;440.0;440.0;440.0;530.0;690.0;530.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>369</x>
      <y>393</y>
      <w>51</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=1
&lt; listens to</panel_attributes>
    <additional_attributes>10.0;20.0;150.0;20.0</additional_attributes>
  </element>
</diagram>
